#!/bin/sh

mount_dir="/mnt" #{{{
cell_mount_dir="$HOME/cell-mount" # Only for mtp devices
success_mnt="Mounted successfully!"
success_umnt="Unmounted successfully!" #}}}

errmsg() { # Error handling{{{
	case $1 in
		no_device) echo "No mountable devices found.";;
		no_mnt_device) echo "No devices mounted at '$mount_dir'";;
		no_cell_mount_dir) echo "Mount folder not found.";;
		no_mtpfs) echo "Simple-mtpfs not installed.";;
		no_fusermount) echo "Fusermount not installed.";;
		no_cryptsetup) echo "cryptsetup not installed";;
	esac
	exit 1
}

found() {
	if [ ! "$(command -v "$1")" ]; then
		echo "$1 is not installed."
		exit 1
	fi
}

inputdev() {
	case $1 in
		mount) printf "Which device to you want to mount? ";;
		unmount) printf "Which device to you want to unmount? ";;
	esac
	read -r device
	if [ -z "$device" ]; then
		echo "No device given."
		exit 1
	fi
	if [ ! -e /dev/"$device" ]; then
		echo "Device not found."
		exit 1
	fi
} #}}}

echo "1. Mount device" #{{{
echo "2. Unmount device"
echo "3. Mount mtp device"
echo "4. Unmount mtp device"
echo "5. Mount LUKS-encrypted device"
echo "6. Unmount LUKS-encrypted device"
printf "What do you want to do? "
read -r choise
echo "" #}}}

case "$choise" in #{{{
	1)
		lsblk
		inputdev mount
		sudo mount /dev/"$device" "$mount_dir" && echo "$success_mnt"
		;;
	2)
		lsblk
		inputdev unmount
		sudo umount /dev/"$device" && echo "$success_umnt"
		;;
	3)
		[ -d "$cell_mount_dir" ] || errmsg no_cell_mount_dir
		found simple-mtpfs || errmsg no_mtpfs
		simple-mtpfs -l || exit 1
		printf "Which device do you want to mount? "
		read -r device
		simple-mtpfs --device "$device" "$cell_mount_dir" && echo "$success_mnt" || exit 1
		;;
	4)
		[ -d "$cell_mount_dir" ] || errmsg no_cell_mount_dir
		found fusermount || errmsg no_fusermount
		fusermount -u "$cell_mount_dir" && echo "$success_umnt" || exit 1
		;;
	5)
		found cryptsetup || errmsg no_cryptsetup
		lsblk
		inputdev mount
		sudo cryptsetup luksOpen /dev/"$device" "$device" || exit 1
		sudo mount /dev/mapper/"$device" "$mount_dir" && echo "$success_mnt"
		;;
	6)
		found cryptsetup || errmsg no_cryptsetup
		lsblk
		inputdev unmount
		sudo umount "$mount_dir"
		sudo cryptsetup luksClose "$device" && echo "$success_umnt"
		;;
	*)
		echo "Invalid option"
		exit 1
		;;
esac #}}}
